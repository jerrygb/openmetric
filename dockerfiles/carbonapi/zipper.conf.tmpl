# NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
#
# A single shell-style (#) comment block may appear at the top of the file
# and will be stripped off. However, the remainder of the file must be valid JSON.
# (So the `//` comments below will cause it to fail)
# (grep -v '^#\|\/\/\s' example.conf | jq '.') will extract the JSON.
#
# NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
{
    // Listen port
    "Port": 8080,

    // Your preferred GOMAXPROCS setting; if you wish to override it in config
    // rather than the environment.
    "MaxProcs": 0,

    // Graphite, "host:port", to send zipper's metrics to.
    "GraphiteHost": "GRAPHITE_URL",

    // Internal metric prefix.
    "InternalMetricPrefix": "openmetric.zipper",

    // Interval seconds to send zipper's own metrics.
    "IntervalSec": 60,

    // Number of 100ms buckets to track request distribution in. Used to build
    // 'carbon.zipper.hostname.requests_in_0ms_to_100ms' metric and friends.
    // Requests beyond the last bucket are logged as slow
    // (default of 10 implies "slow" is >1 second).
    "Buckets": 10,

    // Maximum total backend requesting timeout in ms.
    // ( How long we may spend making requests. )
    "TimeoutMs": 10000,

    // Timeout, in ms, once the final backend has been contacted.
    // ( [Effectively] How long we'll wait for the slowest response. )
    "TimeoutMsAfterAllStarted": 2000,

    // Number of concurrent requests to any given backend - default is no limit.
    // If set, you likely want >= MaxIdleConnsPerHost
    "ConcurrencyLimitPerServer": 0,

    // Control http.MaxIdleConnsPerHost. Large values can lead to more idle
    // connections on the backend servers which may bump into limits; tune with care.
    "MaxIdleConnsPerHost": 100,

    // "http://host:port" array of instances of carbonserver stores
    // This is the *ONLY* config element that MUST be specified.
    "Backends":
    [
        ZIPPER_BACKENDS
    ],

    // Instance of carbonsearch backend
    "SearchBackend": "",

    // carbonsearch prefix to reserve/register
    "SearchPrefix": ""
}
